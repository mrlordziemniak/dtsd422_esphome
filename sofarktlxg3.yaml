esphome:
  name: esp32-sofar
  comment: SofarSolar Logger (Modbus/RS485)
  friendly_name: Sofar KTLXG3

esp32:
  board: esp32dev
  framework:
    type: arduino

substitutions:
  devicename: sofarsolar-logger
  friendly_name: SofarSolar
  hostname: esp32-${inverter_short_name}
  comment: ${friendly_name} Modbus Interface
  friendly_node_name: ESP-Sofar
  inverter_short_name: sofar
  upper_inverter_short_name: Sofar
  esp_id: esp_${inverter_short_name}

# Dioda LED Informacyjna o stanie połącznia.
status_led:
  pin:
    number: GPIO2 #PIN D4
    inverted:
      yes # "yes" - Dioda mruga gdy nie można nawiązać połączenie.
      # "no"  - Dioda świeci gdy połączenie jest nawiązane.

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 300s
  power_save_mode: none

  ap:
    ssid: "SofarLoger"
    password: !secret wifi_ap_password

# Enable Home Assistant API
api:
  encryption:
    key: !secret sofar-loger_api

ota:
  - platform: esphome
    password: !secret sofar-loger_ota

mdns:
captive_portal:
logger:
  level: DEBUG
  baud_rate: 0

uart:
  id: mod_bus
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 9600
  stop_bits: 1
# rx_buffer_size: 256

modbus:
  id: mod_bus_sofar
  #send_wait_time:
  #  milliseconds: 500

modbus_controller:
  - id: sofarsolar
    address: 0x01
    modbus_id: mod_bus_sofar
    update_interval: 10s
    setup_priority: -10
    command_throttle:
      milliseconds: 100

text_sensor:
  - platform: version
    name: ${friendly_node_name} ESPHome Version
    id: ${friendly_name}_esphome_version

  - platform: wifi_info
    ip_address:
      name: ${friendly_node_name} IP Address
      id: ${friendly_name}_ip_address
      icon: mdi:ip-network

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Status
    id: ${esp_id}_status
    register_type: holding
    icon: "mdi:information-outline"
    address: 0x0404
    response_size: 2
    lambda: |-
      auto z = "Unknown";
      char d = data[item->offset+1];
      if (d == 0) z = "Wait";
      else if (d == 1) z = "Check";
      else if (d == 2) z = "Normal";
      else if (d == 4) z = "Fault";
      else if (d == 5) z = "Permanent";
      return {z};

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Fault Message
    id: inverter_fault_message
    register_type: holding
    icon: "mdi:alert-outline"
    address: 0x0405
    response_size: 10
    lambda: |-
      std::string z = "";
      int idx = item->offset;
      //byte[0]
      if ((data[idx] & 0x1) != 0) z += "GridOVP,";
      if ((data[idx] & 0x2) != 0) z += "GridUVP,";
      if ((data[idx] & 0x4) != 0) z += "GridOFP,";
      if ((data[idx] & 0x8) != 0) z += "GridUFP,";
      if ((data[idx] & 0x10) != 0) z += "GFCI,";
      if ((data[idx] & 0x20) != 0) z += "OVRT,";
      if ((data[idx] & 0x40) != 0) z += "LVRT,";
      if ((data[idx] & 0x80) != 0) z += "IslandFault,";
      //byte[1]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "GridOVPInstant1,";
      if ((data[idx] & 0x2) != 0) z += "GridOVPInstant2,";
      if ((data[idx] & 0x4) != 0) z += "VGridLineFault,";
      if ((data[idx] & 0x8) != 0) z += "InvOVP,";
      if ((data[idx] & 0x10) != 0) z += "reserved-ID13,";
      if ((data[idx] & 0x20) != 0) z += "reserved-ID14,";
      if ((data[idx] & 0x40) != 0) z += "reserved-ID15,";
      if ((data[idx] & 0x80) != 0) z += "reserved-ID16,";
      //byte[2]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "HwADFaultIGrid,";
      if ((data[idx] & 0x2) != 0) z += "HwADFaultDCI_AC,";
      if ((data[idx] & 0x4) != 0) z += "HwADFaultVGrid_DC,";
      if ((data[idx] & 0x8) != 0) z += "HwADFaultVGrid_AC,";
      if ((data[idx] & 0x10) != 0) z += "GFCIDeviceFault_DC,";
      if ((data[idx] & 0x20) != 0) z += "GFCIDeviceFault_AC,";
      if ((data[idx] & 0x40) != 0) z += "HwADFaultDCV,";
      if ((data[idx] & 0x80) != 0) z += "HwADFaultIdc,";
      //byte[3]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "HwADFaultDCI_DC,";
      if ((data[idx] & 0x2) != 0) z += "HwADFaultIdcBranch,";
      if ((data[idx] & 0x4) != 0) z += "reserved-ID27,";
      if ((data[idx] & 0x8) != 0) z += "reserved-ID28,";
      if ((data[idx] & 0x10) != 0) z += "ConsistentFault_GFCI,";
      if ((data[idx] & 0x20) != 0) z += "ConsistentFault_Vgrid,";
      if ((data[idx] & 0x40) != 0) z += "ConsistentFault_DCI,";
      if ((data[idx] & 0x80) != 0) z += "reserved-ID32,";
      //byte[4]
      idx++;
      if (data[idx] != 0) z += "reserved-ID33~40,";
      //byte[5]
      idx++;
      if (data[idx] != 0) z += "reserved-ID41~48,";
      //byte[6]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "ConsistentFault_VGrid,";
      if ((data[idx] & 0x2) != 0) z += "ConsistentFault_FGrid,";
      if ((data[idx] & 0x4) != 0) z += "ConsistentFault_DCI,";
      if ((data[idx] & 0x8) != 0) z += "ConsistentFault_GFCI,";
      if ((data[idx] & 0x10) != 0) z += "SpiCommLose,";
      if ((data[idx] & 0x20) != 0) z += "SciCommLose,";
      if ((data[idx] & 0x40) != 0) z += "RelayTestFail,";
      if ((data[idx] & 0x80) != 0) z += "PvIsoFault,";
      //byte[7]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "OverTempFault_Inv,";
      if ((data[idx] & 0x2) != 0) z += "OverTempFault_Boost,";
      if ((data[idx] & 0x4) != 0) z += "OverTempFault_Env,";
      if ((data[idx] & 0x8) != 0) z += "PEConnectFault,";
      if ((data[idx] & 0x10) != 0) z += "reserved-ID61,";
      if ((data[idx] & 0x20) != 0) z += "reserved-ID62,";
      if ((data[idx] & 0x40) != 0) z += "reserved-ID63,";
      if ((data[idx] & 0x80) != 0) z += "reserved-ID64,";
      //byte[8]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "unrecoverHwAcOCP,";
      if ((data[idx] & 0x2) != 0) z += "unrecoverBusOVP,";
      if ((data[idx] & 0x4) != 0) z += "unrecoverIacRmsUnbalance,";
      if ((data[idx] & 0x8) != 0) z += "unrecoverIpvUnbalance,";
      if ((data[idx] & 0x10) != 0) z += "unrecoverVbusUnbalance,";
      if ((data[idx] & 0x20) != 0) z += "unrecoverOCPInstant,";
      if ((data[idx] & 0x40) != 0) z += "unrecoverPvConfigSetWrong,";
      if ((data[idx] & 0x80) != 0) z += "reserved-ID72,";
      //byte[9]
      idx++;
      if ((data[idx] & 0x1) != 0) z += "reserved-ID73,";
      if ((data[idx] & 0x2) != 0) z += "unrecoverIPVInstant,";
      if ((data[idx] & 0x4) != 0) z += "unrecoverWRITEEEPROM,";
      if ((data[idx] & 0x8) != 0) z += "unrecoverREADEEPROM,";
      if ((data[idx] & 0x10) != 0) z += "unrecoverRelayFail,";
      if ((data[idx] & 0x20) != 0) z += "reserved-ID78,";
      if ((data[idx] & 0x40) != 0) z += "reserved-ID79,";
      if ((data[idx] & 0x80) != 0) z += "reserved-ID80,";
      if(z.length() > 0){
        z.pop_back();
      }
      return {z};

sensor:
  - platform: wifi_signal
    id: ${esp_id}_wifi_signal
    name: ${friendly_node_name} WiFi Signal
    update_interval: 30s
    icon: "mdi:wifi"

  - platform: uptime
    id: ${esp_id}_uptime
    name: ${friendly_node_name} Uptime
    filters:
      - lambda: return x / 60.0;
    unit_of_measurement: min
    icon: "mdi:clock-start"

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} DC1 Voltage
    id: ${esp_id}_dc_v1
    register_type: holding
    address: 0x0584
    unit_of_measurement: "V"
    state_class: "measurement"
    device_class: "voltage"
    icon: "mdi:alpha-v-circle-outline"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} DC1 Current
    id: ${esp_id}_dc_c1
    register_type: holding
    address: 0x0585
    unit_of_measurement: "A"
    state_class: "measurement"
    device_class: "current"
    icon: "mdi:alpha-a-circle-outline"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} DC2 Voltage
    id: ${esp_id}_dc_v2
    register_type: holding
    address: 0x0587
    unit_of_measurement: "V"
    state_class: "measurement"
    device_class: "voltage"
    icon: "mdi:alpha-v-circle-outline"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} DC2 Current
    id: ${esp_id}_dc_c2
    register_type: holding
    address: 0x0588
    unit_of_measurement: "A"
    state_class: "measurement"
    device_class: "current"
    icon: "mdi:alpha-a-circle-outline"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} DC1 Power
    id: ${esp_id}_dc_power1
    register_type: holding
    address: 0x0586
    unit_of_measurement: "W"
    state_class: "measurement"
    device_class: "power"
    icon: "mdi:solar-power"
    value_type: U_WORD
    filters:
      - multiply: 10

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} DC2 Power
    id: ${esp_id}_dc_power2
    register_type: holding
    address: 0x0589
    unit_of_measurement: "W"
    state_class: "measurement"
    device_class: "power"
    icon: "mdi:solar-power"
    value_type: U_WORD
    filters:
      - multiply: 10

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} AC Power
    id: ${esp_id}_ac_power
    register_type: holding
    address: 0x0485
    unit_of_measurement: "W"
    state_class: "measurement"
    device_class: "power"
    icon: "mdi:solar-power-variant-outline"
    value_type: U_WORD
    filters:
      - multiply: 10

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} AC Reactive Power
    id: ${esp_id}_ac_reactive_power
    register_type: holding
    address: 0x0486
    unit_of_measurement: "kVar"
    state_class: "measurement"
    icon: "mdi:math-cos"
    value_type: S_WORD
    filters:
      - multiply: 10

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} L1 Voltage
    id: ${esp_id}_ac_v1
    register_type: holding
    address: 0x048D
    unit_of_measurement: "V"
    state_class: "measurement"
    device_class: "voltage"
    icon: "mdi:alpha-v-circle"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} L2 Voltage
    id: ${esp_id}_ac_v2
    register_type: holding
    address: 0x0498
    unit_of_measurement: "V"
    state_class: "measurement"
    device_class: "voltage"
    icon: "mdi:alpha-v-circle"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} L3 Voltage
    id: ${esp_id}_ac_v3
    register_type: holding
    address: 0x04A3
    unit_of_measurement: "V"
    state_class: "measurement"
    device_class: "voltage"
    icon: "mdi:alpha-v-circle"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} L1 Current
    id: ${esp_id}_ac_c1
    register_type: holding
    address: 0x048E
    unit_of_measurement: "A"
    state_class: "measurement"
    device_class: "current"
    icon: "mdi:alpha-a-circle"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} L2 Current
    id: ${esp_id}_ac_c2
    register_type: holding
    address: 0x0499
    unit_of_measurement: "A"
    state_class: "measurement"
    device_class: "current"
    icon: "mdi:alpha-a-circle"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} L3 Current
    id: ${esp_id}_ac_c3
    register_type: holding
    address: 0x04A4
    unit_of_measurement: "A"
    state_class: "measurement"
    device_class: "current"
    icon: "mdi:alpha-a-circle"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} AC Freq
    id: ${esp_id}_ac_freq
    register_type: holding
    address: 0x0484
    unit_of_measurement: "Hz"
    state_class: "measurement"
    icon: "mdi:current-ac"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Energy total
    id: ${esp_id}_energy_total
    register_type: holding
    address: 0x0686
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    device_class: "energy"
    state_class: "total_increasing"
    icon: "mdi:solar-power-variant-outline"
    value_type: U_DWORD
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Energy today
    id: ${esp_id}_energy_today
    register_type: holding
    address: 0x0685
    unit_of_measurement: "kWh"
    device_class: "energy"
    state_class: "total_increasing"
    icon: "mdi:solar-power-variant-outline"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Energy generation time today
    id: ${esp_id}_energy_generation_time_today
    register_type: holding
    address: 0x0426
    unit_of_measurement: "min"
    icon: "mdi:timeline-clock"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Radiator temperature
    id: ${esp_id}_radiator_temperature
    register_type: holding
    address: 0x041A
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: sofarsolar
    name: ${friendly_name} Ambient temperature
    id: ${esp_id}_ambient_temperature
    register_type: holding
    address: 0x0418
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
    value_type: U_WORD

  - platform: template
    name: ${friendly_name} AC Current (total)
    id: ${esp_id}_ac_current_total
    lambda: |-
      return (id(${esp_id}_ac_c1).state + id(${esp_id}_ac_c2).state + id(${esp_id}_ac_c3).state);
    unit_of_measurement: A
    accuracy_decimals: 2
    icon: "mdi:alpha-a-circle"
    device_class: "current"
    state_class: "measurement"
    update_interval: 5s

  - platform: template
    name: ${friendly_name} DC Power (total)
    id: ${esp_id}_dc_power_total
    lambda: |-
      return (id(${esp_id}_dc_power2).state + id(${esp_id}_dc_power1).state);
    unit_of_measurement: W
    state_class: "measurement"
    device_class: "power"
    accuracy_decimals: 0
    icon: "mdi:alpha-a-circle-outline"
    update_interval: 5s

  - platform: copy
    source_id: ${esp_id}_wifi_signal
    id: ${esp_id}_wifi_signal_hr
    name: "${friendly_node_name} WiFi %"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    icon: "mdi:wifi"
    entity_category: "diagnostic"

switch:
  - platform: restart
    name: ${friendly_node_name} Restart

binary_sensor:
  - platform: status
    name: ${friendly_node_name} Status
